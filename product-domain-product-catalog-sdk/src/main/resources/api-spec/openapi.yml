{
  "openapi": "3.0.1",
  "info": {
    "title": "product-domain-product-catalog",
    "description": "Product Domain Product Catalog Layer Application",
    "contact": {
      "name": "Firefly Software Solutions Inc",
      "email": "dev@getfirefly.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://core.getfirefly.io/product-domain-product-catalog",
      "description": "Development Environment"
    },
    {
      "url": "/",
      "description": "Local Development Environment"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "CQ queries and registration for product catalog"
    }
  ],
  "paths": {
    "/api/v1/products": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Register product",
        "description": "Define product (purpose, currency, base rules).",
        "operationId": "registerProduct",
        "parameters": [
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterProductCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/suspend": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Suspend product",
        "description": "Temporarily suspend eligibility.",
        "operationId": "suspendProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/retire": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Retire product",
        "description": "Retire product; existing accounts/loans remain.",
        "operationId": "retireProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/resume": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Resume product",
        "description": "Resume product eligibility.",
        "operationId": "resumeProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/publish": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Publish product",
        "description": "Publish a sellable version (freeze linked configs).",
        "operationId": "publishProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{productId}/posting-rule-set": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Link posting rule set",
        "description": "Link the GL mapping ruleset to the product.",
        "operationId": "linkPostingRuleSet",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Idempotency-Key",
            "in": "header",
            "description": "Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Party-ID",
            "in": "header",
            "description": "Identifier of the client (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Employee-ID",
            "in": "header",
            "description": "Identifier of the employee (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Service-Account-ID",
            "in": "header",
            "description": "Identifier of the service account (at least one of X-Party-ID, X-Employee-ID, or X-Service-Account-ID is required)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Roles",
            "in": "header",
            "description": "Roles of the subject (CUSTOMER, ADMIN, CUSTOMER_SUPPORT, SUPERVISOR, MANAGER, BRANCH_STAFF, SERVICE_ACCOUNT), comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Auth-Scopes",
            "in": "header",
            "description": "OAuth2 scopes like contracts.read, accounts.write, comma-separated (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-ID",
            "in": "header",
            "description": "Unique identifier for the request, used for traceability (optional)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterProductFeeStructureCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterFeeApplicationRuleCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "feeApplicationRuleId": {
            "type": "string",
            "format": "uuid"
          },
          "feeComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "ruleDescription": {
            "type": "string"
          },
          "ruleConditions": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RegisterFeeComponentCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "feeComponentId": {
            "type": "string",
            "format": "uuid"
          },
          "feeStructureId": {
            "type": "string",
            "format": "uuid"
          },
          "feeType": {
            "type": "string",
            "enum": [
              "ORIGINATION_FEE",
              "LATE_PAYMENT_FEE",
              "TRANSACTION_FEE",
              "SERVICE_FEE"
            ]
          },
          "feeDescription": {
            "type": "string"
          },
          "feeAmount": {
            "type": "number"
          },
          "feeUnit": {
            "type": "string",
            "enum": [
              "FIXED",
              "PERCENTAGE"
            ]
          },
          "applicableConditions": {
            "type": "string"
          }
        }
      },
      "RegisterFeeStructureCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "feeStructureId": {
            "type": "string",
            "format": "uuid"
          },
          "feeStructureName": {
            "type": "string"
          },
          "feeStructureDescription": {
            "type": "string"
          },
          "feeStructureType": {
            "type": "string",
            "enum": [
              "VERTICAL",
              "HORIZONTAL"
            ]
          }
        }
      },
      "RegisterProductBundleCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productBundleId": {
            "type": "string",
            "format": "uuid"
          },
          "bundleName": {
            "type": "string"
          },
          "bundleDescription": {
            "type": "string"
          },
          "bundleStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "RETIRED",
              "PROMO"
            ]
          }
        }
      },
      "RegisterProductBundleItemCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productBundleItemId": {
            "type": "string",
            "format": "uuid"
          },
          "productBundleId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "specialConditions": {
            "type": "string"
          }
        }
      },
      "RegisterProductCategoryCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "categoryName": {
            "type": "string"
          },
          "categoryDescription": {
            "type": "string"
          },
          "parentCategoryId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RegisterProductCommand": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/RegisterProductInfoCommand"
          },
          "productFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductFeatureCommand"
            }
          },
          "productPricing": {
            "$ref": "#/components/schemas/RegisterProductPricingCommand"
          },
          "productDocumentation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductDocumentationCommand"
            }
          },
          "productLifecycle": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductLifecycleCommand"
            }
          },
          "productLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductLimitCommand"
            }
          },
          "productLocalizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductLocalizationCommand"
            }
          },
          "productVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductVersionCommand"
            }
          },
          "productFeeStructures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductFeeStructureCommand"
            }
          },
          "productRelationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductRelationshipCommand"
            }
          },
          "productDocumentationRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductDocumentationRequirementCommand"
            }
          },
          "productCategory": {
            "$ref": "#/components/schemas/RegisterProductCategoryCommand"
          },
          "productSubtype": {
            "$ref": "#/components/schemas/RegisterProductSubtypeCommand"
          },
          "productBundle": {
            "$ref": "#/components/schemas/RegisterProductBundleCommand"
          },
          "feeApplicationRule": {
            "$ref": "#/components/schemas/RegisterFeeApplicationRuleCommand"
          },
          "feeComponent": {
            "$ref": "#/components/schemas/RegisterFeeComponentCommand"
          },
          "feeStructure": {
            "$ref": "#/components/schemas/RegisterFeeStructureCommand"
          },
          "productBundleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegisterProductBundleItemCommand"
            }
          },
          "productPricingLocalization": {
            "$ref": "#/components/schemas/RegisterProductPricingLocalizationCommand"
          }
        }
      },
      "RegisterProductDocumentationCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productDocumentationId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "docType": {
            "type": "string",
            "enum": [
              "TNC",
              "BROCHURE",
              "POLICY_DOC"
            ]
          },
          "documentManagerRef": {
            "type": "integer",
            "format": "int64"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RegisterProductDocumentationRequirementCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productDocRequirementId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "docType": {
            "type": "string",
            "enum": [
              "IDENTIFICATION",
              "TAX_IDENTIFICATION",
              "PROOF_OF_ADDRESS",
              "INCOME_VERIFICATION",
              "BANK_STATEMENTS",
              "POWER_OF_ATTORNEY",
              "BUSINESS_REGISTRATION",
              "ARTICLES_OF_INCORPORATION",
              "COMPANY_BYLAWS",
              "SIGNED_CONTRACT",
              "REGULATORY_COMPLIANCE",
              "CREDIT_REPORT",
              "INSURANCE_POLICY",
              "OTHER"
            ]
          },
          "isMandatory": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RegisterProductFeatureCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productFeatureId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "featureName": {
            "type": "string"
          },
          "featureDescription": {
            "type": "string"
          },
          "featureType": {
            "type": "string",
            "enum": [
              "STANDARD",
              "OPTIONAL",
              "PREMIUM"
            ]
          },
          "isMandatory": {
            "type": "boolean"
          }
        }
      },
      "RegisterProductFeeStructureCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productFeeStructureId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "feeStructureId": {
            "type": "string",
            "format": "uuid"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegisterProductInfoCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productSubtypeId": {
            "type": "string",
            "format": "uuid"
          },
          "productType": {
            "type": "string",
            "enum": [
              "FINANCIAL",
              "NON_FINANCIAL"
            ]
          },
          "productName": {
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "productDescription": {
            "type": "string"
          },
          "productStatus": {
            "type": "string",
            "enum": [
              "PROPOSED",
              "ACTIVE",
              "RETIRED",
              "DRAFT"
            ]
          },
          "launchDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RegisterProductLifecycleCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productLifecycleId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "lifecycleStatus": {
            "type": "string",
            "enum": [
              "PROPOSED",
              "ACTIVE",
              "SUSPENDED",
              "RETIRED"
            ]
          },
          "statusStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "statusEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "RegisterProductLimitCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productLimitId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "limitType": {
            "type": "string",
            "enum": [
              "CREDIT_LIMIT",
              "WITHDRAWAL_LIMIT",
              "SUBSCRIPTION_LIMIT"
            ]
          },
          "limitValue": {
            "type": "number"
          },
          "limitUnit": {
            "type": "string"
          },
          "timePeriod": {
            "type": "string",
            "enum": [
              "DAILY",
              "MONTHLY",
              "PER_TRANSACTION",
              "NONE"
            ]
          },
          "effectiveDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RegisterProductLocalizationCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productLocalizationId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "languageCode": {
            "type": "string"
          },
          "localizedName": {
            "type": "string"
          },
          "localizedDescription": {
            "type": "string"
          }
        }
      },
      "RegisterProductPricingCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productPricingId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "pricingType": {
            "type": "string",
            "enum": [
              "INTEREST_RATE",
              "FEE",
              "COVERAGE",
              "SUBSCRIPTION"
            ]
          },
          "amountValue": {
            "type": "number"
          },
          "amountUnit": {
            "type": "string"
          },
          "pricingCondition": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date"
          },
          "expiryDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "RegisterProductPricingLocalizationCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productPricingLocalizationId": {
            "type": "string",
            "format": "uuid"
          },
          "productPricingId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyCode": {
            "type": "string"
          },
          "localizedAmountValue": {
            "type": "number"
          }
        }
      },
      "RegisterProductRelationshipCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productRelationshipId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "relatedProductId": {
            "type": "string",
            "format": "uuid"
          },
          "relationshipType": {
            "type": "string",
            "enum": [
              "PRE_REQUISITE",
              "COMPLIMENTARY",
              "UPGRADE",
              "CROSS_SELL"
            ]
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RegisterProductSubtypeCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productSubtypeId": {
            "type": "string",
            "format": "uuid"
          },
          "productCategoryId": {
            "type": "string",
            "format": "uuid"
          },
          "subtypeName": {
            "type": "string"
          },
          "subtypeDescription": {
            "type": "string"
          }
        }
      },
      "RegisterProductVersionCommand": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "productVersionId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "versionNumber": {
            "type": "integer",
            "format": "int64"
          },
          "versionDescription": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}